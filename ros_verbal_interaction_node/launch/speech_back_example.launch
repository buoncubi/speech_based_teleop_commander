<!-- EXAMPLE OF CALL ANOTHER LAUNCH FILE <include file="$(find freenect_launch)/launch/freenect.launch"/> -->
<!-- EXAMPLE TO RUN NODE OR SERVICE  <node name="deepFilterSrv" pkg="object_table_segmentation" type="deepFilterSrv" 	output="screen"/></node> -->
<!-- EXAMPLE FOR ROSJAVA NODE OR SERVICE <node pkg="object_perception" name="semanticSceneRecognitonSrv" type="execute" args="com.github.rosjava.object_perception.semantic_geometric_traking.SemanticSheneRecognition" output="screen"> </node> -->
<!-- EXAMPLE FOR RUN BASH SCRIPT WITH ARGUMENT <node name="nodename" pkg="yourpackage" type="yourscript.sh" args="-h"></node> -->



<launch>

<include file="$(find rosbridge_server)/launch/rosbridge_websocket.launch"/>

<!-- you can use arguments: [-f] [-s] (see "web_interface_visualiser.sh -h" ) and the agent_priority-->
<param name="speech_agent_priority" type="str" value="human" /> <!-- "human" or "robot" (not capitalised!!!)-->
<node name="web_interface_visualiser" pkg="speech_interaction" type="web_interface_visualiser.sh" args="-u $(find speech_interaction)/java-script/speech_web_interface.html" output="screen"/>

<!-- you can use speaker arguments: [_robot_language(str)] [_robot_volume(double)] [_robot_pitch(double)] [_robot_rate(double)]  (see http://responsivevoice.org/api/) and [_speech_dialog_print(str, path to the produced file. "":=don't print)] -->
<node name="speech_back_example" pkg="speech_interaction" type="speech_example" args="_robot_language:='UK English Male' _speech_dialog_print:=$(find speech_interaction)'dialogs-log/'" output="screen" />

</launch>
